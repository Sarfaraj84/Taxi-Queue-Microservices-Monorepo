version: '3.8'

networks:
  taxi-network:
    driver: bridge
  auth-network:
    driver: bridge
  user-network:
    driver: bridge
  queue-network:
    driver: bridge
  geo-network:
    driver: bridge
  vehicle-network:
    driver: bridge
  payment-network:
    driver: bridge
  config-network:
    driver: bridge
  redis-network:
    driver: bridge
  mongodb-network:
    driver: bridge
  postgres-network:
    driver: bridge

volumes:
  auth-mongo-data:
  user-mongo-data:
  queue-mongo-data:
  geo-postgres-data:
  vehicle-mongo-data:
  payment-mongo-data:
  config-mongo-data:
  redis-data:

services:
  # Redis (Shared across all services)
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - redis-network
      - auth-network
      - user-network
      - queue-network
      - payment-network
      - config-network

  # Auth Service
  auth-service:
    build: ./auth-service
    ports:
      - '50051:50051'
    environment:
      - NODE_ENV=production
      - PORT=50051
      - MONGODB_URI=mongodb://auth-mongo:27017/authdb
      - REDIS_URL=redis://redis:6379/0
    networks:
      - taxi-network
      - auth-network
      - redis-network
      - mongodb-network
    depends_on:
      - auth-mongo
      - redis

  auth-mongo:
    image: mongo:5
    volumes:
      - auth-mongo-data:/data/db
    networks:
      - auth-network
      - mongodb-network
    command: mongod --quiet --logpath /dev/null

  # User Service
  user-service:
    build: ./user-service
    ports:
      - '50052:50052'
    environment:
      - NODE_ENV=production
      - PORT=50052
      - MONGODB_URI=mongodb://user-mongo:27017/userdb
      - REDIS_URL=redis://redis:6379/1
    networks:
      - taxi-network
      - user-network
      - redis-network
      - mongodb-network
    depends_on:
      - user-mongo
      - redis

  user-mongo:
    image: mongo:5
    volumes:
      - user-mongo-data:/data/db
    networks:
      - user-network
      - mongodb-network

  # Payment Service
  payment-service:
    build: ./payment-service
    ports:
      - '50056:50056'
    environment:
      - NODE_ENV=production
      - PORT=50056
      - MONGODB_URI=mongodb://payment-mongo:27017/paymentdb
      - REDIS_URL=redis://redis:6379/5
      - STRIPE_SECRET_KEY=sk_test_your_stripe_key
    networks:
      - taxi-network
      - payment-network
      - redis-network
      - mongodb-network
    depends_on:
      - payment-mongo
      - redis

  payment-mongo:
    image: mongo:5
    volumes:
      - payment-mongo-data:/data/db
    networks:
      - payment-network
      - mongodb-network

  # Config Service
  config-service:
    build: ./config-service
    ports:
      - '50057:50057'
    environment:
      - NODE_ENV=production
      - PORT=50057
      - MONGODB_URI=mongodb://config-mongo:27017/configdb
      - REDIS_URL=redis://redis:6379/6
    networks:
      - taxi-network
      - config-network
      - redis-network
      - mongodb-network
    depends_on:
      - config-mongo
      - redis

  config-mongo:
    image: mongo:5
    volumes:
      - config-mongo-data:/data/db
    networks:
      - config-network
      - mongodb-network

  # API Gateway (Access to all networks)
  api-gateway:
    build: ./api-gateway
    ports:
      - '3000:3000'
    networks:
      - taxi-network
      - auth-network
      - user-network
      - queue-network
      - geo-network
      - vehicle-network
      - payment-network
      - config-network
    depends_on:
      - auth-service
      - user-service
      - queue-service
      - geo-service
      - vehicle-service
      - payment-service
      - config-service
