syntax = "proto3";

package queue;

service QueueService {
  rpc HealthCheck (HealthRequest) returns (HealthResponse) {};
  rpc AddToQueue (AddToQueueRequest) returns (QueueResponse) {};
  rpc RemoveFromQueue (RemoveFromQueueRequest) returns (QueueResponse) {};
  rpc GetQueueStatus (QueueStatusRequest) returns (QueueStatusResponse) {};
  rpc GetDriverPosition (DriverPositionRequest) returns (DriverPositionResponse) {};
  rpc ReleaseDrivers (ReleaseRequest) returns (ReleaseResponse) {};
  rpc HandleAirportClosure (ClosureRequest) returns (ClosureResponse) {};
}

message HealthRequest {
  string service = 1;
}

message HealthResponse {
  string status = 1;
  string message = 2;
  string timestamp = 3;
  int32 primaryQueueCount = 4;
  int32 secondaryQueueCount = 5;
  int32 priorityAccessCount = 6;
}

message AddToQueueRequest {
  string driverId = 1;
  string vehicleType = 2;
  string queueType = 3;
}

message RemoveFromQueueRequest {
  string driverId = 1;
  string queueType = 2;
}

message QueueStatusRequest {
  string queueType = 1;
  string vehicleType = 2;
}

message DriverPositionRequest {
  string driverId = 1;
  string queueType = 2;
}

message ReleaseRequest {
  string queueType = 1;
  int32 count = 2;
  string terminal = 3;
  map<string, int32> vehicleRequirements = 4;
}

message ClosureRequest {
  string reason = 1;
  int32 priorityExpiryHours = 2;
}

message QueueResponse {
  bool success = 1;
  string message = 2;
  int32 position = 3;
  string queueType = 4;
  bool hasPriority = 5;
}

message QueueStatusResponse {
  bool success = 1;
  int32 count = 2;
  repeated Driver drivers = 3;
  string queueType = 4;
  map<string, int32> vehicleCounts = 5;
}

message DriverPositionResponse {
  bool success = 1;
  int32 position = 2;
  string queueType = 3;
  string message = 4;
  bool hasPriority = 5;
}

message ReleaseResponse {
  bool success = 1;
  string message = 2;
  int32 releasedCount = 3;
  repeated string driverIds = 4;
  string terminal = 5;
}

message ClosureResponse {
  bool success = 1;
  string message = 2;
  int32 driversMoved = 3;
  string priorityExpiry = 4;
}

message Driver {
  string id = 1;
  string name = 2;
  string vehicleType = 3;
  int32 position = 4;
  string queueType = 5;
  string joinedAt = 6;
  bool hasPriority = 7;
}